#			  -*- mode: org -*-

#+TITLE:     CL Machine-Learning
#+AUTHOR:    Salvi Péter, Naganuma Shigeta, Tada Masashi, Abe Yusuke, Jianshi Huang, Fujii Ryo, Abe Seika, Kuroda Hisao
#+OPTIONS:   H:2 num:t toc:t \n:nil @:t ::t |:t ^:t *:t TeX:nil LaTeX:nil f:nil

CL Machine-Learning is a large scale statistical
machine learning package written in Common Lisp. It is designed to be high-performance and run on most
major platforms. The package currently supports several Common Lisp implementations, including
Allegro, Lispworks and Sbcl.

[[http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/CLML.html][日本語版はここ]]

* Installation Notes

** For Windows Users

- OpenMP library

  Just copy

    lib/mkl_win(32/64)/libiomp5md.dll

  to \WINDOWS\system32 directory, MKL customized library depends on
  this file that must be loaded from search-able PATHs on Windows.


** For Linux Users

Latest Linux distributions, it should be OK just loading the fasl
files.

If the libraries cannot be loaded, please check the version of GLIBC
on your Linux system is 2.X. Or check that libc6 package has been
installed.

*Supported Statistical Methods
** Requirements
The package does not depend on any libraries (yet). Any ANSI-compliant
Common Lisp should be enough. However, to load it easily, you need the
ASDF package (http://www.cliki.net/asdf).

*** Distributions
Distributions are CLOS objects, and they are created by the constructor
of the same name. The objects support the methods CDF (cumulative
distribution function), DENSITY (MASS for discrete distributions),
QUANTILE, RAND (gives a random number according to the given distribution),
RAND-N (convenience function that gives n random numbers), MEAN and
VARIANCE (giving the distribution's mean and variance, respectively).
These take the distribution as their first parameter.

Most probability distributions can also be created with an estimator constructor.
The estimator function has the form <distribution>-ESTIMATE, unless noted.

*** Outlier verification

*** Sample listener log

** Notes
- Numbers are not converted to (double) floats, for better accuracy with
  whole number data. This should be OK, since double data will generate
  double results (the number type is preserved).
- Places marked with TODO are not optimal or not finished (see the TODO
  file for more details).
* Test package
The package for test is 'lisp-unit'.
Operation check required: linux32, linux64, win32, sparc/solaris32
** lisp-unit
*** How to use
- 1. Read the documentation in 
   http://www.cs.northwestern.edu/academics/courses/325/readings/lisp-unit.html

- 2. Make a file of DEFINE-TEST's. See exercise-tests.lisp for many examples. If you want, start your test file with (REMOVE-TESTS) to clear any previously defined tests.

- 2. (use-package :lisp-unit)

- 3. Load your code file and your file of tests.

- 4. Test your code with (RUN-TESTS test-name1 test-name2 ...) -- no quotes! -- or simply (RUN-TESTS) to run all defined tests.

- A summary of how many tests passed and failed will be printed, with details on the failures.

- Note: Nothing is compiled until RUN-TESTS is expanded. Redefining functions or even macros does not require reloading any tests.
** STEFIL
- http://common-lisp.net/project/stefil/

* Licensing

CLML is licensed under the terms of the Lisp Lesser GNU Public
License, known as the LLGPL and distributed with CLML as the
file "LICENSE". The LLGPL consists of a preamble and the LGPL, which
is distributed with CLML as the file "LGPL". Where these
conflict, the preamble takes precedence.

The LGPL is also available online at:  http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html

The LLGPL is also available online at:  http://opensource.franz.com/preamble.html

* Supported CL implementations
We're supporting only ANSI Common Lisp.
If you need support for CL dialect such as Allegro's mlisp,
contact mailto:clml-info@msi.co.jp. 

- Allegro CL 9.0 (non-SMP) Enterprise 32 Edition (ANSI mode, any platforms)
- Allegro CL 9.0 (non-SMP) Enterprise 64 Edition (ANSI mode, any platforms)
- lispworks-6-0-0-amd64-linux
- lispworks-6-0-0-x86-linux
- sbcl-1.0.28-x86-64-linux

* Download
** fasl packages
*** allegro
- windows 64 \\
  http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-acl81.64wfasl.gz
- linux 64 \\
  http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-acl81.64ufasl.gz
- windows 32 \\
  http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-acl81.32wfasl.gz
- linux 32 \\
  http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-acl81.32ufasl.gz
*** lispworks
- linux 64 \\
  http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-lw60.64ufasl.gz
- linux 32 \\
  http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-lw60.ufasl.gz
*** sbcl
- linux 64 (sbcl-1.0.28-x86-64-linux) \\
  http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-sbcl.64ufasl.gz
** sample data
- http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-sample.tgz
- http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-eyes-sample.tgz
- http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-faces-sample.tgz
- http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-articles-sample.tgz
** test scripts
- http://cl-www.msi.co.jp/solutions/knowledge/lisp-world/products/clml-test.tgz

